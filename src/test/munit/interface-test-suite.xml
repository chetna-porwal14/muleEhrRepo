<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="interface-test-suite.xml" />
	<sub-flow name="setEvent" doc:id="4928ea9c-c699-4869-8d4b-c5fbd23d6461" >
		<munit:set-event doc:name="Set Event" doc:id="fb39617d-e409-45d0-b41a-b8910eb97724">
				<munit:payload value="#[output text/plain --- readUrl('classpath://hl7v23processtestnewpatient/set-event_payload.dwl')]" encoding="UTF-8" mediaType="text/plain" />
			</munit:set-event>
	</sub-flow>
	<munit:test name="test-suite-implementation-hl7" doc:id="fb2c6819-2e48-4d84-aa9c-a97cb551c6de" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="37d22386-9652-4a74-8037-32e11a620ebd" processor="hl7:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4bb5ca36-41b5-4add-a9d1-1c4c72230f6f" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="HL7_EDI_Config_V2_3" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="Acknowldegement" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="Acknowledgement" value="#[%dw 2.0 output application/json ---  readUrl('classpath://hl7v23processtestnewpatient/mock_acknowledgement.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<flow-ref doc:name="setEvent" doc:id="165cbb7b-e95a-4f53-b0db-bf4c483ef49d" name="setEvent" />
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to interfaceFlow" doc:id="83134439-eef8-4137-98b0-e84224b23319" name="interfaceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="a315a4f6-1132-4ce5-8717-7d470f89b30b" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="test-suite-implementation-hl7process" doc:id="0f89a143-e548-4c4d-b31f-0739742f2f30" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="074304f1-364d-4650-addc-63b0f67f57c8" processor="salesforce-composite:execute-composite-request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c8ed9f0a-7dd7-4f6c-816a-8acb87ab7b9b" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Salesforce_Composite_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="Execute composite request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[%dw 2.0 output application/json ---  readUrl('classpath://hl7v23processtestnewpatient/mock_composite.dwl')]" mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
	
			</munit-tools:mock-when>
			<flow-ref doc:name="setEvent" doc:id="ebae9805-c61e-4953-ba90-a16f42ad852c" name="setEvent"/>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="df355fe8-d3eb-44f4-852b-f4d418b430e5" name="implementation-hl7-process"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="34a79985-0add-4cbb-afeb-fe89488ccec7" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="Errorhandler-test-suiteTest" doc:id="2592c70f-49a8-427a-ae4e-4881df3569de" expectedErrorType="ANY">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="eb6030b3-1778-4399-ac37-c415a5ea3999" processor="on-error-propagate">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="true" attributeName="enableNotifications" />
					<munit-tools:with-attribute whereValue="true" attributeName="logException" />
					<munit-tools:with-attribute whereValue="On Error Propagate" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="97c8ad88-3b32-47f5-a222-2603999071db" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="dfadd3db-bddc-4902-b120-4aa1f7f945ac" name="interfaceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="e9731367-99f5-4a46-9fc4-92aa521c0281" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>


</mule>
